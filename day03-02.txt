Majority Element II
You are given an array of integer arr[] where each number represents a vote to a candidate.
Return the candidates that have votes greater than one-third of the total votes, If there's not a majority vote, return an empty array. 

Note: The answer should be returned in an increasing format.

Examples:

Input: arr[] = [2, 1, 5, 5, 5, 5, 6, 6, 6, 6, 6]
Output: [5, 6]
Explanation: 5 and 6 occur more n/3 times.
Input: arr[] = [1, 2, 3, 4, 5]
Output: []
Explanation: o candidate occur more than n/3 times.
Constraint:
1 <= arr.size() <= 10^6
-10^9 <= arr[i] <= 10^9


Solution

class Solution {
    // Function to find the majority elements in the array
    public List<Integer> findMajority(int[] arr) {
        int n=arr.length;
        ArrayList<Integer>ans=new ArrayList<>();
        Map<Integer,Integer>map=new HashMap<>();
        for(int i=0;i<n;i++){
            map.put(arr[i],map.getOrDefault(arr[i],0)+1);
        }
        
        for(int x:map.keySet()){
            if(map.get(x)>n/3){
                ans.add(x);
            }
        }
        return ans;
    }
}

